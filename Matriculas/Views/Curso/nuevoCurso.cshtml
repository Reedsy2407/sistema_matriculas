@model MatriculasMODELS.CursoO

@{
    ViewData["Title"] = "Registrar Nuevo Curso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4">Registrar Nuevo Curso</h2>

<div class="card shadow-sm p-4">
    <form asp-action="nuevoCurso">
        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

        <div class="mb-3">
            <label asp-for="nom_curso" class="form-label"></label>
            <input asp-for="nom_curso" class="form-control" />
            <span asp-validation-for="nom_curso" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="creditos_curso" class="form-label"></label>
            <input asp-for="creditos_curso" class="form-control" />
            <span asp-validation-for="creditos_curso" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="id_carrera" class="form-label"></label>
            @Html.DropDownListFor(model => model.id_carrera, new SelectList(ViewBag.Carreras, "Value", "Text"),
                     "Seleccione Carrera", new { @class = "form-select" })
            <span asp-validation-for="id_carrera" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <input type="submit" value="Registrar" class="btn btn-success" />
            <a asp-action="listadoCursos" class="btn btn-secondary ms-2">Cancelar</a>
        </div>
    </form>
</div>


@section Scripts {
    <script>
        var msg = '@ViewBag.Mensaje';
        if (msg) {
          Swal.fire({
            title: msg,
            icon: msg.includes('correctamente') ? 'success' : 'error',
            timer: 2000,
            showConfirmButton: false
          });
        }
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}