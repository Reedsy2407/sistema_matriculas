
use master
go

create database matriculas_bd
go

use matriculas_bd
go

create table tb_rol
(
    id_rol int IDENTITY(1,1) primary key,
    nom_rol varchar(50) not null
)
go

INSERT INTO tb_rol (nom_rol) VALUES 
('Administrador'),
('Docente'),
('Alumno')
GO

create table tb_usuario
(
    id_usuario int IDENTITY(1,1) primary key,
	nom_usuario varchar(50) not null,
	ape_usuario varchar(50) not null,
	contrasena varchar(30) not null,
	cod_especialidad int null, --Docente
	id_carrera int null, --Alumno
	id_rol int not null, 
	estado bit not null,
	foreign key (id_rol) references tb_rol(id_rol),
	foreign key (cod_especialidad) references tb_especialidad(cod_especialidad),
	foreign key (id_carrera) references tb_carrera(id_carrera)
)
go

-- Crear usuarios Administradores
INSERT INTO tb_usuario (nom_usuario, ape_usuario, contrasena, cod_especialidad, id_carrera, id_rol, estado)
VALUES 
('Admin', 'Principal', 'admin123', NULL, NULL, 1, 1),
('Soporte', 'Técnico', 'soporte456', NULL, NULL, 1, 1)
GO

-- Crear usuarios Docentes (asociados a especialidades)
INSERT INTO tb_usuario (nom_usuario, ape_usuario, contrasena, cod_especialidad, id_carrera, id_rol, estado)
VALUES 
('Carlos', 'Mendoza', 'docente123', 1, NULL, 2, 1),  -- Matemáticas
('Laura', 'García', 'docente456', 2, NULL, 2, 1),    -- Ciencias
('Pedro', 'Martínez', 'docente789', 4, NULL, 2, 1)   -- Ingeniería de Software
GO

-- Crear usuarios Alumnos (asociados a carreras)
INSERT INTO tb_usuario (nom_usuario, ape_usuario, contrasena, cod_especialidad, id_carrera, id_rol, estado)
VALUES 
('Juan', 'Pérez', 'alumno123', NULL, 1, 3, 1),  -- Ingeniería de Sistemas
('María', 'López', 'alumno456', NULL, 2, 3, 1), -- Administración
('Ana', 'Gómez', 'alumno789', NULL, 1, 3, 1)    -- Ingeniería de Sistemas
GO

create table tb_menu(
	id_menu int identity(1,1) primary key,
	titulo_menu varchar(50) not null,
	url_menu varchar(100),
	orden smallint not null,
	es_activo bit default 1
)
go

create table tb_menu_rol(
	id_menu int not null,
	id_rol int not null,
	primary key (id_menu, id_rol),
	foreign key (id_menu) references tb_menu(id_menu),
	foreign key (id_rol) references tb_rol(id_rol)
 )
go

create table tb_especialidad
(
	cod_especialidad int IDENTITY(1,1) primary key,
	nom_especialidad varchar(50) not null
)
go

INSERT INTO tb_especialidad (nom_especialidad) VALUES
('Matemáticas'),
('Ciencias'),
('Literatura'),
('Ingeniería de Software'),
('Base de Datos')
GO


create table tb_carrera
(
    id_carrera int IDENTITY(1,1) primary key,
    nom_carrera varchar(50) not null
)
go

INSERT INTO tb_carrera (nom_carrera) VALUES
('Ingeniería de Sistemas'),
('Administración de Empresas'),
('Derecho'),
('Medicina'),
('Arquitectura')
GO

create table tb_curso
(
    id_curso int IDENTITY(1,1) primary key,
    nom_curso varchar(50) not null,
	creditos_curso smallint,
	id_carrera int,
	foreign key (id_carrera) references tb_carrera(id_carrera)
)
go

INSERT INTO tb_curso (nom_curso, creditos_curso, id_carrera) VALUES
('Programación I', 4, 1),
('Cálculo I', 4, 1),
('Introducción a la Administración', 3, 2),
('Derecho Civil', 5, 3)
GO

create table tb_aula
(
	id_aula int identity(1,1) primary key,
    cod_aula char(4) CHECK (cod_aula LIKE '[A-E][0-9][0-9][0-9]'),
    capacidad_aula smallint,
    es_disponible bit
)
go

INSERT INTO tb_aula (cod_aula, capacidad_aula, es_disponible) VALUES
('A101', 30, 1),
('B202', 25, 1),
('C303', 40, 1),
('D404', 20, 0)
GO


create table tb_seccion
(
	id_seccion int identity(1,1) primary key,
    cod_seccion char(4) CHECK (cod_seccion LIKE '[A-Z][0-9][A-Z][A-Z]'),
    cupos_disponible smallint,
    cupos_maximos smallint,
    horario_seccion char(5),
    id_usuario int,
    id_aula int,
	id_curso int,
    foreign key (id_usuario) references tb_usuario(id_usuario),
	foreign key (id_curso) references tb_curso(id_curso),
	foreign key (id_aula) references tb_aula(id_aula)
)
go

INSERT INTO tb_seccion (cod_seccion, cupos_disponible, cupos_maximos, horario_seccion, id_usuario, id_aula, id_curso) VALUES
('A1MA', 25, 30, '08:00', 3, 1, 1),  -- Docente Carlos Mendoza enseña Programación I
('B1TG', 20, 25, '10:00', 4, 2, 2)   -- Docente Laura García enseña Cálculo I
GO

create table tb_periodo
(
    id_periodo char(6) primary key CHECK (id_periodo LIKE '[2][0][2][0-9][-][1-2]'),
	fcha_inicio DateTime not null,
	fcha_fin DateTime not null,
)
go

create table tb_matricula
(
    id_matricula int IDENTITY(1000,1) primary key,
	id_usuario int,
	id_periodo char(6),
	foreign key (id_usuario) references tb_usuario(id_usuario),
	foreign key (id_periodo) references tb_periodo(id_periodo)
)
go

create table tb_detalle_matricula
(
    id_matricula int,
	id_seccion int,
	id_curso int,
	foreign key (id_matricula) references tb_matricula(id_matricula),
	foreign key (id_curso) references tb_curso(id_curso),
	foreign key (id_seccion) references tb_seccion(id_seccion)
)



create or alter procedure usp_actualizarDocentes
    @id_docente int,
    @nomdoce varchar(50),
    @codespe int,
    @estado bit,
    @contrasena varchar(30) = null
as
begin
    update tb_usuario
    set 
        nom_usuario = @nomdoce,
        cod_especialidad = @codespe,
        contrasena = case when @estado = 1 then ISNULL(@contrasena, contrasena) else null end
    where 
        id_usuario = @id_docente
        and id_rol = 2  -- Rol Docente
end
go

create or alter procedure usp_listarDocentes
as
    select 
        U.id_usuario as id_docente, 
        U.nom_usuario + ' ' + U.ape_usuario as nom_docente, 
        E.nom_especialidad,
        U.estado
    from tb_usuario as U
    join tb_especialidad as E on U.cod_especialidad = E.cod_especialidad
    where U.id_rol = 2  -- Rol Docente
go
